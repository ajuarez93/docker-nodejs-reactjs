version: "3"

networks:
  api_server_node_react:
    driver: bridge

services:
  back_app_test_nodejs_reactjs:
    platform: linux/arm64 
    container_name: back_app_test_nodejs_reactjs
    image: nodeex.core.image
    build: 
     context: .
     dockerfile: Dockerfile
     target: node_express_image
    networks:
      - api_server_node_react
    ports:
      - 5005:5000
    volumes:
      - ${DIR_BACK_APP}:/usr/src/app/main
      - /usr/src/app/node_modules
    depends_on:
      - mariadb_node_react
    restart: always
    command: npm run start
  
 

  front_app_test_nodejs_reactjs:
    stdin_open: true
    platform: linux/arm64 
    container_name: front_app_test_nodejs_reactjs
    image: nodereact.core.image
    build: 
     context: .
     dockerfile: Dockerfile
     target: node_react_image
    networks:
      - api_server_node_react
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ${DIR_FRONT_APP}:/usr/src/app
      - /app/node_modules

  nginx_app_test_nodejs_reactjs:
    platform: linux/arm64 
    container_name: nginx_app_test_nodejs_reactjs
    image: nginx.core.image
    depends_on:
      - front_app_test_nodejs_reactjs
      - back_app_test_nodejs_reactjs
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
      target: nginx_image
    ports:
      - "3100:80"
    networks:
      - api_server_node_react

  mariadb_node_react:
    container_name: mariadb_node_react
    image: 'mariadb:10.3.8'
    volumes:
      - mariadb-nodejs-react-volumen:/var/lib/mysql
      - ./mariadb_conf/my.cnf:/etc/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - api_server_node_react
    ports:
      - 3310:3306

volumes:
  mariadb-nodejs-react-volumen: # unchanged
